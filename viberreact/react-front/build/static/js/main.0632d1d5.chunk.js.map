{"version":3,"sources":["../node_modules/express/lib sync","core/Home.js","user/Signup.js","MainRouter.js","App.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","Home","className","express","require","bodyParser","mongoose","connect","db","connection","on","console","log","bind","once","callback","app","use","json","static","urlencoded","extended","Signup","handleChange","name","event","setState","target","value","clickSubmit","preventDefault","state","user","email","password","fetch","method","headers","Accept","body","JSON","stringify","then","response","catch","err","error","this","onChange","type","onClick","Component","MainRouter","exact","path","component","config","process","MONGO_URI","useNewUrlParser","message","App","ReactDOM","render","document","getElementById"],"mappings":"yOAAA,SAASA,EAAoBC,GAC5B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBF,EAAM,KAEjD,MADAC,EAAEE,KAAO,mBACHF,EAEPF,EAAoBK,KAAO,WAAa,MAAO,IAC/CL,EAAoBM,QAAUN,EAC9BO,EAAOC,QAAUR,EACjBA,EAAoBS,GAAK,K,+KCCVC,EAPF,kBACT,yBAAKC,UAAU,aACX,qCACA,uBAAGA,UAAU,QAAb,kC,sDCJFC,EAAQC,EAAQ,KAChBC,EAAWD,EAAQ,KACnBE,EAAWF,EAAQ,KAGzBE,EAASC,QAAQ,oCACjB,IAAIC,EAAGF,EAASG,WAChBD,EAAGE,GAAG,QAASC,QAAQC,IAAIC,KAAKF,QAAS,qBACzCH,EAAGM,KAAK,QAAQ,SAASC,GACrBJ,QAAQC,IAAI,2BAGhB,IAAII,EAAIb,IACRa,EAAIC,IAAIZ,EAAWa,QACnBF,EAAIC,IAAId,EAAQgB,OAAO,WACvBH,EAAIC,IAAIZ,EAAWe,WAAW,CAC1BC,UAAU,K,IA6ECC,E,YAxEV,aAAe,IAAD,8BACV,+CAWRC,aAAe,SAAAC,GAAI,OAAI,SAAAC,GACnB,EAAKC,SAAL,eAAgBF,EAAOC,EAAME,OAAOC,UAbtB,EAgBlBC,YAAc,SAAAJ,GAEVA,EAAMK,iBAFa,MAIa,EAAKC,MAC/BC,EAAO,CACTR,KANe,EAIZA,KAGHS,MAPe,EAINA,MAITC,SARe,EAICA,UAMpBC,MAAM,+BAAgC,CAClCC,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,oBAErBC,KAAMC,KAAKC,UAAUT,KAEvBU,MAAK,SAAAC,GACF,OAAOA,EAASzB,UAEnB0B,OAAM,SAAAC,GAAG,OAAIlC,QAAQC,IAAIiC,OAnClB,EAAKd,MAAQ,CACTP,KAAM,GACNS,MAAO,GACPC,SAAU,GACVY,MAAO,IANL,E,sEAyCL,IAAD,EAC2BC,KAAKhB,MAA9BP,EADF,EACEA,KAAMS,EADR,EACQA,MAAOC,EADf,EACeA,SACpB,OACI,6BACI,yBAAKhC,UAAU,aACf,wBAAIA,UAAU,aAAd,UACA,8BACI,yBAAKA,UAAU,cACf,2BAAOA,UAAU,cAAjB,QACA,2BAAO8C,SAAUD,KAAKxB,aAAa,QAAS0B,KAAK,OAAO/C,UAAU,eAClE0B,MAAOJ,KAEP,yBAAKtB,UAAU,cACf,2BAAOA,UAAU,cAAjB,SACA,2BAAO8C,SAAUD,KAAKxB,aAAa,SAAU0B,KAAK,QAAQ/C,UAAU,eACpE0B,MAAOK,KAEP,yBAAK/B,UAAU,cACf,2BAAOA,UAAU,cAAjB,YACA,2BAAO8C,SAAUD,KAAKxB,aAAa,YAAa0B,KAAK,WAAW/C,UAAU,eAC1E0B,MAAOM,KAGP,4BAAQgB,QAASH,KAAKlB,YAAa3B,UAAU,qCAA7C,iB,GAjECiD,aCNNC,EAVI,kBACnB,6BACI,kBAAC,IAAD,KACJ,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWtD,IACjC,kBAAC,IAAD,CAAOoD,OAAK,EAACC,KAAK,UAAUC,UAAWjC,OCLjChB,EAAWF,EAAS,KAEXA,EAAQ,KAChBoD,SAGPlD,EAASC,QACPkD,8CAAYC,UACZ,CAACC,iBAAiB,IAEnBjB,MAAK,kBAAM/B,QAAQC,IAAI,mBAExBN,EAASG,WAAWC,GAAG,SAAS,SAAAmC,GAC9BlC,QAAQC,IAAR,+BAAoCiC,EAAIe,aAI1C,IAMeC,EANH,kBACZ,kBAAC,IAAD,KACC,kBAAC,EAAD,QClBDC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.0632d1d5.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 326;","import React from \"react\"\n\nconst Home = () => (\n    <div className=\"jumbotron\">\n        <h2> Home</h2>\n        <p className=\"lead\"> Welcome to React Foundation</p>\n    </div>\n)\n\nexport default Home;","import React, {Component} from \"react\";\nconst express=require(\"express\"); \nconst bodyParser=require(\"body-parser\"); \nconst mongoose = require('mongoose'); \n\n\nmongoose.connect('mongodb://localhost:27017/signup'); \nvar db=mongoose.connection; \ndb.on('error', console.log.bind(console, \"connection error\")); \ndb.once('open', function(callback){ \n    console.log(\"connection succeeded\"); \n}) \n\nvar app=express() \napp.use(bodyParser.json()); \napp.use(express.static('public')); \napp.use(bodyParser.urlencoded({ \n    extended: true\n})); \n\n\nclass Signup extends Component {\n     constructor() {\n         super()\n             this.state = {\n                 name: \"\",\n                 email: \"\",\n                 password: \"\",\n                 error: \"\",\n             \n             }\n     }\n//event target value changes and talk to the state above and populate fields with setState\n//this sytanx with event works for all of them no need to do three\n handleChange = name => event => {\n     this.setState({[name]: event.target.value});\n }\n\n clickSubmit = event => {\n     //stop default behavior\n     event.preventDefault()\n     //no need to put this state in the object\n     const {name, email, password} = this.state\n     const user = {\n         name,\n         email,\n         password\n     };\n     fetch(\"http://localhost:8080/signup\", {\n         method: \"POST\",\n         headers: {\n             Accept: \"application/json\",\n             \"Content-Type\": \"application/json\"\n         },\n        body: JSON.stringify(user)\n     })\n     .then(response => {\n         return response.json()\n     })\n     .catch(err => console.log(err))\n };\n\n\n    render() {\n        const {name, email, password} = this.state\n        return (\n            <div>\n                <div className=\"container\">\n                <h2 className=\"mt-5 mb-5\">Signup</h2>\n                <form>\n                    <div className=\"form-group\">\n                    <label className=\"text-muted\">Name</label>\n                    <input onChange={this.handleChange(\"name\")} type=\"text\" className=\"form-control\"\n                    value={name}/>\n                    </div>\n                    <div className=\"form-group\">\n                    <label className=\"text-muted\">Email</label>\n                    <input onChange={this.handleChange(\"email\")} type=\"email\" className=\"form-control\"\n                    value={email}/>\n                    </div>\n                    <div className=\"form-group\">\n                    <label className=\"text-muted\">Password</label>\n                    <input onChange={this.handleChange(\"password\")} type=\"password\" className=\"form-control\"\n                    value={password}/>\n                    </div>\n                    \n                    <button onClick={this.clickSubmit} className=\"button.btn.btn-raised.btn-primary\">Submit</button>\n                </form>\n            </div>\n            </div>\n        );\n    }\n}\n\nexport default Signup;","import React from 'react'\nimport {Route, Switch} from 'react-router-dom'\nimport Home from \"./core/Home\";\nimport Signup from \"./user/Signup\"\n\nconst MainRouter = () => (\n<div>\n    <Switch>\n<Route exact path=\"/\" component={Home}/>\n<Route exact path=\"/signup\" component={Signup}/>\n    </Switch>\n    </div>\n    \n);\n\nexport default MainRouter;","import React from \"react\";\nimport {BrowserRouter} from 'react-router-dom'\nimport MainRouter from './MainRouter'\n\nconst mongoose = require ('mongoose');\n// load env variables\nconst dotenv = require('dotenv');\ndotenv.config()\n \n//db connection\nmongoose.connect(\n  process.env.MONGO_URI,\n  {useNewUrlParser: true}\n)\n.then(() => console.log('DB Connected'))\n \nmongoose.connection.on('error', err => {\n  console.log(`DB connection error: ${err.message}`)\n});\n\n\nconst App = () => (\n<BrowserRouter>\n <MainRouter />\n</BrowserRouter>\n)\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}