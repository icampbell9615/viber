{"ast":null,"code":"import _defineProperty from\"/Users/annacampbell/viber/viberreact/react-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/annacampbell/viber/viberreact/react-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/annacampbell/viber/viberreact/react-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/annacampbell/viber/viberreact/react-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/annacampbell/viber/viberreact/react-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/annacampbell/viber/viberreact/react-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from\"react\";var express=require(\"express\");var bodyParser=require(\"body-parser\");var mongoose=require('mongoose');mongoose.connect('mongodb://localhost:27017/signup');var db=mongoose.connection;db.on('error',console.log.bind(console,\"connection error\"));db.once('open',function(callback){console.log(\"connection succeeded\");});var app=express();app.use(bodyParser.json());app.use(express.static('public'));app.use(bodyParser.urlencoded({extended:true}));var Signup=/*#__PURE__*/function(_Component){_inherits(Signup,_Component);function Signup(){var _this;_classCallCheck(this,Signup);_this=_possibleConstructorReturn(this,_getPrototypeOf(Signup).call(this));_this.handleChange=function(name){return function(event){_this.setState(_defineProperty({},name,event.target.value));};};_this.clickSubmit=function(event){//stop default behavior\nevent.preventDefault();//no need to put this state in the object\nvar _this$state=_this.state,name=_this$state.name,email=_this$state.email,password=_this$state.password;var user={name:name,email:email,password:password};fetch(\"http://localhost:8080/signup\",{method:\"POST\",headers:{Accept:\"application/json\",\"Content-Type\":\"application/json\"},body:JSON.stringify(user)}).then(function(response){return response.json();}).catch(function(err){return console.log(err);});};_this.state={name:\"\",email:\"\",password:\"\",error:\"\"};return _this;}//event target value changes and talk to the state above and populate fields with setState\n//this sytanx with event works for all of them no need to do three\n_createClass(Signup,[{key:\"render\",value:function render(){var _this$state2=this.state,name=_this$state2.name,email=_this$state2.email,password=_this$state2.password;return React.createElement(\"div\",null,React.createElement(\"div\",{className:\"container\"},React.createElement(\"h2\",{className:\"mt-5 mb-5\"},\"Signup\"),React.createElement(\"form\",null,React.createElement(\"div\",{className:\"form-group\"},React.createElement(\"label\",{className:\"text-muted\"},\"Name\"),React.createElement(\"input\",{onChange:this.handleChange(\"name\"),type:\"text\",className:\"form-control\",value:name})),React.createElement(\"div\",{className:\"form-group\"},React.createElement(\"label\",{className:\"text-muted\"},\"Email\"),React.createElement(\"input\",{onChange:this.handleChange(\"email\"),type:\"email\",className:\"form-control\",value:email})),React.createElement(\"div\",{className:\"form-group\"},React.createElement(\"label\",{className:\"text-muted\"},\"Password\"),React.createElement(\"input\",{onChange:this.handleChange(\"password\"),type:\"password\",className:\"form-control\",value:password})),React.createElement(\"button\",{onClick:this.clickSubmit,className:\"button.btn.btn-raised.btn-primary\"},\"Submit\"))));}}]);return Signup;}(Component);export default Signup;","map":{"version":3,"sources":["/Users/annacampbell/viber/viberreact/react-front/src/user/Signup.js"],"names":["React","Component","express","require","bodyParser","mongoose","connect","db","connection","on","console","log","bind","once","callback","app","use","json","static","urlencoded","extended","Signup","handleChange","name","event","setState","target","value","clickSubmit","preventDefault","state","email","password","user","fetch","method","headers","Accept","body","JSON","stringify","then","response","catch","err","error"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nconst express=require(\"express\"); \nconst bodyParser=require(\"body-parser\"); \nconst mongoose = require('mongoose'); \n\n\nmongoose.connect('mongodb://localhost:27017/signup'); \nvar db=mongoose.connection; \ndb.on('error', console.log.bind(console, \"connection error\")); \ndb.once('open', function(callback){ \n    console.log(\"connection succeeded\"); \n}) \n\nvar app=express() \napp.use(bodyParser.json()); \napp.use(express.static('public')); \napp.use(bodyParser.urlencoded({ \n    extended: true\n})); \n\n\nclass Signup extends Component {\n     constructor() {\n         super()\n             this.state = {\n                 name: \"\",\n                 email: \"\",\n                 password: \"\",\n                 error: \"\",\n             \n             }\n     }\n//event target value changes and talk to the state above and populate fields with setState\n//this sytanx with event works for all of them no need to do three\n handleChange = name => event => {\n     this.setState({[name]: event.target.value});\n }\n\n clickSubmit = event => {\n     //stop default behavior\n     event.preventDefault()\n     //no need to put this state in the object\n     const {name, email, password} = this.state\n     const user = {\n         name,\n         email,\n         password\n     };\n     fetch(\"http://localhost:8080/signup\", {\n         method: \"POST\",\n         headers: {\n             Accept: \"application/json\",\n             \"Content-Type\": \"application/json\"\n         },\n        body: JSON.stringify(user)\n     })\n     .then(response => {\n         return response.json()\n     })\n     .catch(err => console.log(err))\n };\n\n\n    render() {\n        const {name, email, password} = this.state\n        return (\n            <div>\n                <div className=\"container\">\n                <h2 className=\"mt-5 mb-5\">Signup</h2>\n                <form>\n                    <div className=\"form-group\">\n                    <label className=\"text-muted\">Name</label>\n                    <input onChange={this.handleChange(\"name\")} type=\"text\" className=\"form-control\"\n                    value={name}/>\n                    </div>\n                    <div className=\"form-group\">\n                    <label className=\"text-muted\">Email</label>\n                    <input onChange={this.handleChange(\"email\")} type=\"email\" className=\"form-control\"\n                    value={email}/>\n                    </div>\n                    <div className=\"form-group\">\n                    <label className=\"text-muted\">Password</label>\n                    <input onChange={this.handleChange(\"password\")} type=\"password\" className=\"form-control\"\n                    value={password}/>\n                    </div>\n                    \n                    <button onClick={this.clickSubmit} className=\"button.btn.btn-raised.btn-primary\">Submit</button>\n                </form>\n            </div>\n            </div>\n        );\n    }\n}\n\nexport default Signup;"]},"metadata":{},"sourceType":"module"}