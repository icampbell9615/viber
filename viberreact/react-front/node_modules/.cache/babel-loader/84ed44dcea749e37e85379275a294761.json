{"ast":null,"code":"import React, { Component } from \"react\";\n\nconst express = require(\"express\");\n\nconst bodyParser = require(\"body-parser\");\n\nconst mongoose = require('mongoose');\n\nmongoose.connect('mongodb://localhost:27017/signup');\nvar db = mongoose.connection;\ndb.on('error', console.log.bind(console, \"connection error\"));\ndb.once('open', function (callback) {\n  console.log(\"connection succeeded\");\n});\nvar app = express();\napp.use(bodyParser.json());\napp.use(express.static('public'));\napp.use(bodyParser.urlencoded({\n  extended: true\n})); // class Signup extends Component {\n//      constructor() {\n//          super()\n//              this.state = {\n//                  name: \"\",\n//                  email: \"\",\n//                  password: \"\",\n//                  error: \"\",\n//              }\n//      }\n//event target value changes and talk to the state above and populate fields with setState\n//this sytanx with event works for all of them no need to do three\n//  handleChange = name => event => {\n//      this.setState({[name]: event.target.value});\n//  }\n//  clickSubmit = event => {\n//      //stop default behavior\n//      event.preventDefault()\n//      //no need to put this state in the object\n//      const {name, email, password} = this.state\n//      const user = {\n//          name,\n//          email,\n//          password\n//      };\n//      fetch(\"http://localhost:8080/signup\", {\n//          method: \"POST\",\n//          headers: {\n//              Accept: \"application/json\",\n//              \"Content-Type\": \"application/json\"\n//          },\n//         body: JSON.stringify(user)\n//      })\n//      .then(response => {\n//          return response.json()\n//      })\n//      .catch(err => console.log(err))\n//  };\n//     render() {\n//         const {name, email, password} = this.state\n//         return (\n//             <div>\n//                 <div className=\"container\">\n//                 <h2 className=\"mt-5 mb-5\">Signup</h2>\n//                 <form>\n//                     <div className=\"form-group\">\n//                     <label className=\"text-muted\">Name</label>\n//                     <input onChange={this.handleChange(\"name\")} type=\"text\" className=\"form-control\"\n//                     value={name}/>\n//                     </div>\n//                     <div className=\"form-group\">\n//                     <label className=\"text-muted\">Email</label>\n//                     <input onChange={this.handleChange(\"email\")} type=\"email\" className=\"form-control\"\n//                     value={email}/>\n//                     </div>\n//                     <div className=\"form-group\">\n//                     <label className=\"text-muted\">Password</label>\n//                     <input onChange={this.handleChange(\"password\")} type=\"password\" className=\"form-control\"\n//                     value={password}/>\n//                     </div>\n//                     <button onClick={this.clickSubmit} className=\"button.btn.btn-raised.btn-primary\">Submit</button>\n//                 </form>\n//             </div>\n//             </div>\n//         );\n//     }\n// }\n\nexport default Signup;","map":{"version":3,"sources":["/Users/annacampbell/viber/viberreact/react-front/src/user/Signup.js"],"names":["React","Component","express","require","bodyParser","mongoose","connect","db","connection","on","console","log","bind","once","callback","app","use","json","static","urlencoded","extended","Signup"],"mappings":"AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;AACA,MAAMC,OAAO,GAACC,OAAO,CAAC,SAAD,CAArB;;AACA,MAAMC,UAAU,GAACD,OAAO,CAAC,aAAD,CAAxB;;AAEA,MAAME,QAAQ,GAAGF,OAAO,CAAC,UAAD,CAAxB;;AACAE,QAAQ,CAACC,OAAT,CAAiB,kCAAjB;AACA,IAAIC,EAAE,GAACF,QAAQ,CAACG,UAAhB;AACAD,EAAE,CAACE,EAAH,CAAM,OAAN,EAAeC,OAAO,CAACC,GAAR,CAAYC,IAAZ,CAAiBF,OAAjB,EAA0B,kBAA1B,CAAf;AACAH,EAAE,CAACM,IAAH,CAAQ,MAAR,EAAgB,UAASC,QAAT,EAAkB;AAC9BJ,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACH,CAFD;AAIA,IAAII,GAAG,GAACb,OAAO,EAAf;AAGAa,GAAG,CAACC,GAAJ,CAAQZ,UAAU,CAACa,IAAX,EAAR;AACAF,GAAG,CAACC,GAAJ,CAAQd,OAAO,CAACgB,MAAR,CAAe,QAAf,CAAR;AACAH,GAAG,CAACC,GAAJ,CAAQZ,UAAU,CAACe,UAAX,CAAsB;AAC1BC,EAAAA,QAAQ,EAAE;AADgB,CAAtB,CAAR,E,CAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeC,MAAf","sourcesContent":["import React, {Component} from \"react\";\nconst express=require(\"express\"); \nconst bodyParser=require(\"body-parser\"); \n\nconst mongoose = require('mongoose'); \nmongoose.connect('mongodb://localhost:27017/signup'); \nvar db=mongoose.connection; \ndb.on('error', console.log.bind(console, \"connection error\")); \ndb.once('open', function(callback){ \n    console.log(\"connection succeeded\"); \n}) \n  \nvar app=express() \n  \n  \napp.use(bodyParser.json()); \napp.use(express.static('public')); \napp.use(bodyParser.urlencoded({ \n    extended: true\n})); \n\n\n// class Signup extends Component {\n//      constructor() {\n//          super()\n//              this.state = {\n//                  name: \"\",\n//                  email: \"\",\n//                  password: \"\",\n//                  error: \"\",\n             \n//              }\n//      }\n//event target value changes and talk to the state above and populate fields with setState\n//this sytanx with event works for all of them no need to do three\n//  handleChange = name => event => {\n//      this.setState({[name]: event.target.value});\n//  }\n\n//  clickSubmit = event => {\n//      //stop default behavior\n//      event.preventDefault()\n//      //no need to put this state in the object\n//      const {name, email, password} = this.state\n//      const user = {\n//          name,\n//          email,\n//          password\n//      };\n//      fetch(\"http://localhost:8080/signup\", {\n//          method: \"POST\",\n//          headers: {\n//              Accept: \"application/json\",\n//              \"Content-Type\": \"application/json\"\n//          },\n//         body: JSON.stringify(user)\n//      })\n//      .then(response => {\n//          return response.json()\n//      })\n//      .catch(err => console.log(err))\n//  };\n\n\n//     render() {\n//         const {name, email, password} = this.state\n//         return (\n//             <div>\n//                 <div className=\"container\">\n//                 <h2 className=\"mt-5 mb-5\">Signup</h2>\n//                 <form>\n//                     <div className=\"form-group\">\n//                     <label className=\"text-muted\">Name</label>\n//                     <input onChange={this.handleChange(\"name\")} type=\"text\" className=\"form-control\"\n//                     value={name}/>\n//                     </div>\n//                     <div className=\"form-group\">\n//                     <label className=\"text-muted\">Email</label>\n//                     <input onChange={this.handleChange(\"email\")} type=\"email\" className=\"form-control\"\n//                     value={email}/>\n//                     </div>\n//                     <div className=\"form-group\">\n//                     <label className=\"text-muted\">Password</label>\n//                     <input onChange={this.handleChange(\"password\")} type=\"password\" className=\"form-control\"\n//                     value={password}/>\n//                     </div>\n                    \n//                     <button onClick={this.clickSubmit} className=\"button.btn.btn-raised.btn-primary\">Submit</button>\n//                 </form>\n//             </div>\n//             </div>\n//         );\n//     }\n// }\n\nexport default Signup;"]},"metadata":{},"sourceType":"module"}